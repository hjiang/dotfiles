;; -*- mode: emacs-lisp -*-

;; always end a file with a newline
(setq require-final-newline t)

;; stop at the end of the file, not just add lines
(setq next-line-add-newlines nil)

(setq load-path (cons "~/.emacs.d" load-path))



(custom-set-variables
 '(load-home-init-file t t))
(custom-set-faces)

;; (load-file "~/.emacs.d/good-colors.el")
;;(require 'color-themes)
;;(color-theme-clarity)

(load-file "/home/build/public/eng/elisp/google.el")

;; (load-file "/usr/local/google/home/hjiang/emacs/home/build/public/google/util/google.el")

(setq compile-command "blaze build ")

(require 'p4-google)                ;; g4-annotate, improves find-file-at-point
(require 'compilation-colorization) ;; colorizes output of (i)grep
(require 'rotate-clients)           ;; google-rotate-client
(require 'rotate-among-files)       ;; google-rotate-among-files
(require 'googlemenu)               ;; handy Google menu bar
(require 'google-java)              ;; fast Java compilation code
(require 'google3)                  ;; magically set paths for compiling google3 code
(require 'gsearch)                  ;; Search the whole Google code base.
(google-setup-tramp)

(require 'p4-files)                 ;; transparent support for Perforce filesystem
(p4-enable-file-name-handler)


(global-set-key [f4] 'google-show-tag-locations-regexp)
(global-set-key [f5] 'google-show-callers)
(global-set-key [f6] 'google-pop-tag)
(global-set-key [f7] 'google-show-matching-tags)
(global-set-key [f3] 'gsearch)
(global-set-key [f8] 'google-compile)

(gsearch-convert-filenames-on)

(setq google-tags-default-mode 'c++-mode)

(setq make-backup-files nil)

(column-number-mode 1)


(setq default-fill-column 78)

(global-font-lock-mode 1)

(setq google-decipher-proto-files t)

(server-start)

(defun split-3-horizontal () (interactive)
  (split-window-horizontally (* 2 (/ (let ((edges (window-edges)))
				       (- (nth 2 edges) (nth 0 edges)))
				     3)))
  (split-window-horizontally))

(setq default-frame-alist
    '((font . "-B&H-LucidaTypewriter-Medium-R-Normal-Sans-14-140-*-*-M-*-ISO8859-1")))
(setq initial-frame-alist default-frame-alist)

(p4-set-p4-executable "/home/build/static/projects/overlayfs/g4_or_v4.sh")

(defun v4-edit-open-asynchronously ()
  "If the current buffer is already writeable, do nothing.
Otherwise, mark it as writeable, then issue the command  in the background.  This is intended for use when
Perforce is slow and you want to edit a file right away.

WARNING: There is a race condition here.  If you try to save your
changes before  finishes, Perforce may overwrite your changes
on disk.  Simply save again once Perforce is done."
  (interactive)
  (if (not buffer-read-only)
      (message "Buffer is already writeable (file: %s)." buffer-file-name)
    (setq buffer-read-only nil)
    (start-process "g4-edit" "*G4 edit*" (p4-check-p4-executable) "edit" buffer-file-name)))
(define-key p4-prefix-map "e" 'v4-edit-open-asynchronously)

(defun rat-edit ()
  "Just like v4-edit, but for labrats"
  (interactive)
  (if (not buffer-read-only)
      (message "Buffer is already writeable (file: %s)." buffer-file-name)
    (call-process "/home/build/static/projects/labrat/rat" nil nil nil "edit" buffer-file-name)
    (setq buffer-read-only nil)))

(load-file "~/.emacs.d/hjiang-functions.el")
(load-file "~/.emacs.d/hjiang-keybindings.el")
(load-file "~/.emacs.d/hjiang-customization.el")

;; (require 'linum)
;; (global-linum-mode t)
;; (setq linum-format "%d ")
;; (defun p4-command (&optional use-g4)
;;   "Returns the Perforce command to use.  Uses g4 if USE-G4 is non-nil."
;;   (format "cd ~; P4PORT=%s /usr/local/scripts/%s %s "
;;       p4-port (if use-g4 "g4" "p4") p4-options))
